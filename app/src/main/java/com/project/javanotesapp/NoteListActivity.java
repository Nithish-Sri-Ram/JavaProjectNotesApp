package com.project.javanotesapp;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;
import androidx.lifecycle.ViewModelProvider;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.project.javanotesapp.entity.NoteEntity;
import com.project.javanotesapp.model.NoteListViewModel;

public class NoteListActivity extends AppCompatActivity {
    private NoteListViewModel viewModel;
    private RecyclerView recyclerView;
    private NoteAdapter adapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_note_list);

        recyclerView = findViewById(R.id.recyclerView);
        TextView emptyView = findViewById(R.id.empty_view);
        FloatingActionButton fabAddNote = findViewById(R.id.fab_add_note); // Reference to FAB

        recyclerView.setLayoutManager(new LinearLayoutManager(this));
        adapter = new NoteAdapter();
        recyclerView.setAdapter(adapter);

        viewModel = new ViewModelProvider(this).get(NoteListViewModel.class);
        viewModel.loadNotes(); // Load initial notes
        // NoteListActivity.java
        viewModel.getNotes().observe(this, notes -> {
            if (notes == null || notes.isEmpty()) {
                emptyView.setVisibility(View.VISIBLE);
                recyclerView.setVisibility(View.GONE);
            } else {
                emptyView.setVisibility(View.GONE);
                recyclerView.setVisibility(View.VISIBLE);
                adapter.submitList(notes); // Changed from setNotes()
            }
        });

        // Handle "Add Note" button click
        fabAddNote.setOnClickListener(v -> {
            showAddNoteDialog();  // Show the dialog for user input
        });
    }

    private void showAddNoteDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle("New Note");

        // Inflate custom layout for the dialog
        View dialogView = LayoutInflater.from(this).inflate(R.layout.dialog_add_note, null);
        builder.setView(dialogView);

        EditText editTitle = dialogView.findViewById(R.id.edit_title);
        EditText editContent = dialogView.findViewById(R.id.edit_content);

        builder.setPositiveButton("Save", (dialog, which) -> {
            String title = editTitle.getText().toString().trim();
            String content = editContent.getText().toString().trim();

            if (!title.isEmpty()) {
                try {
                    // Create the new note - ID will be auto-generated by Room
                    NoteEntity newNote = new NoteEntity(title, content.isEmpty() ? "No content" : content);

                    // Add the note using the ViewModel
                    viewModel.addNote(newNote);

                    // Show confirmation
                    Toast.makeText(this, "Note saved successfully", Toast.LENGTH_SHORT).show();
                } catch (Exception e) {
                    // Handle any exceptions that might occur
                    Toast.makeText(this, "Error saving note: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                    e.printStackTrace();
                }
            } else {
                Toast.makeText(this, "Title cannot be empty", Toast.LENGTH_SHORT).show();
            }
        });

        builder.setNegativeButton("Cancel", (dialog, which) -> dialog.dismiss());

        AlertDialog dialog = builder.create();
        dialog.show();
    }
}
